name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: Rust ${{ matrix.rust }} on (${{ matrix.icon }} ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # rust: [stable, beta]
        rust: [stable]
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
            icon: "üêß"
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            icon: "üçè"
          - os: windows-latest
            sccache-path: "C:\\Users\\runner\\AppData\\Local\\Mozilla\\sccache"
            icon: "ü™ü"
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - name: üì• Git checkout
        uses: actions/checkout@v2
      - name: Install sccache (üêß)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod a+x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" | tee -a $GITHUB_PATH
      - name: Install sccache (üçè)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache
      - name: Install sccache (ü™ü)
        if: matrix.os == 'windows-latest'
        run: |
          Set-Location "$env:USERPROFILE"
          $client = new-object System.Net.WebClient
          $client.DownloadFile("https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-pc-windows-msvc.tar.gz", "$pwd\sccache.tar.gz")
          tar -xvzf .\sccache.tar.gz
          Move-Item -Path .\sccache-v0.2.15-x86_64-pc-windows-msvc\sccache.exe -Destination .\.cargo\bin\sccache.exe
      - name: ü¶Ä Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: ‚ñ∂Ô∏è Start sccache server
        run: sccache --start-server
      # Build
      - name: üèó Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --all-targets
      - name: üß™ Test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: üé© Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: üìé Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      # End build
      - name: üìä Print sccache stats
        run: sccache --show-stats
      - name: üõë Stop sccache server
        run: sccache --stop-server || true
